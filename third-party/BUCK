# @generated by `reindeer buckify`

load("@prelude//rust:cargo_buildscript.bzl", "buildscript_run")
load("@prelude//rust:cargo_package.bzl", "cargo")

http_archive(
    name = "bitflags-1.3.2.crate",
    sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
    strip_prefix = "bitflags-1.3.2",
    urls = ["https://crates.io/api/v1/crates/bitflags/1.3.2/download"],
    visibility = [],
)

cargo.rust_library(
    name = "bitflags-1.3.2",
    srcs = [":bitflags-1.3.2.crate"],
    crate = "bitflags",
    crate_root = "bitflags-1.3.2.crate/src/lib.rs",
    edition = "2018",
    features = ["default"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

alias(
    name = "cc",
    actual = ":cc-1.0.79",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "cc-1.0.79.crate",
    sha256 = "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f",
    strip_prefix = "cc-1.0.79",
    urls = ["https://crates.io/api/v1/crates/cc/1.0.79/download"],
    visibility = [],
)

cargo.rust_library(
    name = "cc-1.0.79",
    srcs = [":cc-1.0.79.crate"],
    crate = "cc",
    crate_root = "cc-1.0.79.crate/src/lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

alias(
    name = "clap",
    actual = ":clap-4.1.13",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "clap-4.1.13.crate",
    sha256 = "3c911b090850d79fc64fe9ea01e28e465f65e821e08813ced95bced72f7a8a9b",
    strip_prefix = "clap-4.1.13",
    urls = ["https://crates.io/api/v1/crates/clap/4.1.13/download"],
    visibility = [],
)

cargo.rust_library(
    name = "clap-4.1.13",
    srcs = [":clap-4.1.13.crate"],
    crate = "clap",
    crate_root = "clap-4.1.13.crate/src/lib.rs",
    edition = "2021",
    features = [
        "error-context",
        "help",
        "std",
        "usage",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":bitflags-1.3.2",
        ":clap_lex-0.3.3",
    ],
)

http_archive(
    name = "clap_lex-0.3.3.crate",
    sha256 = "033f6b7a4acb1f358c742aaca805c939ee73b4c6209ae4318ec7aca81c42e646",
    strip_prefix = "clap_lex-0.3.3",
    urls = ["https://crates.io/api/v1/crates/clap_lex/0.3.3/download"],
    visibility = [],
)

cargo.rust_library(
    name = "clap_lex-0.3.3",
    srcs = [":clap_lex-0.3.3.crate"],
    crate = "clap_lex",
    crate_root = "clap_lex-0.3.3.crate/src/lib.rs",
    edition = "2021",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":os_str_bytes-6.5.0"],
)

alias(
    name = "codespan-reporting",
    actual = ":codespan-reporting-0.11.1",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "codespan-reporting-0.11.1.crate",
    sha256 = "3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e",
    strip_prefix = "codespan-reporting-0.11.1",
    urls = ["https://crates.io/api/v1/crates/codespan-reporting/0.11.1/download"],
    visibility = [],
)

cargo.rust_library(
    name = "codespan-reporting-0.11.1",
    srcs = [":codespan-reporting-0.11.1.crate"],
    crate = "codespan_reporting",
    crate_root = "codespan-reporting-0.11.1.crate/src/lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":termcolor-1.2.0",
        ":unicode-width-0.1.10",
    ],
)

http_archive(
    name = "libc-0.2.142.crate",
    sha256 = "6a987beff54b60ffa6d51982e1aa1146bc42f19bd26be28b0586f252fccf5317",
    strip_prefix = "libc-0.2.142",
    urls = ["https://crates.io/api/v1/crates/libc/0.2.142/download"],
    visibility = [],
)

cargo.rust_library(
    name = "libc-0.2.142",
    srcs = [":libc-0.2.142.crate"],
    crate = "libc",
    crate_root = "libc-0.2.142.crate/src/lib.rs",
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :libc-0.2.142-build-script-run[rustc_flags])",
    ],
    visibility = [],
)

cargo.rust_binary(
    name = "libc-0.2.142-build-script-build",
    srcs = [":libc-0.2.142.crate"],
    crate = "build_script_build",
    crate_root = "libc-0.2.142.crate/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

buildscript_run(
    name = "libc-0.2.142-build-script-run",
    package_name = "libc",
    buildscript_rule = ":libc-0.2.142-build-script-build",
    version = "0.2.142",
)

alias(
    name = "once_cell",
    actual = ":once_cell-1.17.1",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "once_cell-1.17.1.crate",
    sha256 = "b7e5500299e16ebb147ae15a00a942af264cf3688f47923b8fc2cd5858f23ad3",
    strip_prefix = "once_cell-1.17.1",
    urls = ["https://crates.io/api/v1/crates/once_cell/1.17.1/download"],
    visibility = [],
)

cargo.rust_library(
    name = "once_cell-1.17.1",
    srcs = [":once_cell-1.17.1.crate"],
    crate = "once_cell",
    crate_root = "once_cell-1.17.1.crate/src/lib.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "race",
        "std",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

http_archive(
    name = "os_str_bytes-6.5.0.crate",
    sha256 = "ceedf44fb00f2d1984b0bc98102627ce622e083e49a5bacdb3e514fa4238e267",
    strip_prefix = "os_str_bytes-6.5.0",
    urls = ["https://crates.io/api/v1/crates/os_str_bytes/6.5.0/download"],
    visibility = [],
)

cargo.rust_library(
    name = "os_str_bytes-6.5.0",
    srcs = [":os_str_bytes-6.5.0.crate"],
    crate = "os_str_bytes",
    crate_root = "os_str_bytes-6.5.0.crate/src/lib.rs",
    edition = "2021",
    features = ["raw_os_str"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

alias(
    name = "proc-macro2",
    actual = ":proc-macro2-1.0.53",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "proc-macro2-1.0.53.crate",
    sha256 = "ba466839c78239c09faf015484e5cc04860f88242cff4d03eb038f04b4699b73",
    strip_prefix = "proc-macro2-1.0.53",
    urls = ["https://crates.io/api/v1/crates/proc-macro2/1.0.53/download"],
    visibility = [],
)

cargo.rust_library(
    name = "proc-macro2-1.0.53",
    srcs = [":proc-macro2-1.0.53.crate"],
    crate = "proc_macro2",
    crate_root = "proc-macro2-1.0.53.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
        "span-locations",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :proc-macro2-1.0.53-build-script-run[rustc_flags])",
    ],
    visibility = [],
    deps = [":unicode-ident-1.0.8"],
)

cargo.rust_binary(
    name = "proc-macro2-1.0.53-build-script-build",
    srcs = [":proc-macro2-1.0.53.crate"],
    crate = "build_script_build",
    crate_root = "proc-macro2-1.0.53.crate/build.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
        "span-locations",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

buildscript_run(
    name = "proc-macro2-1.0.53-build-script-run",
    package_name = "proc-macro2",
    buildscript_rule = ":proc-macro2-1.0.53-build-script-build",
    features = [
        "default",
        "proc-macro",
        "span-locations",
    ],
    version = "1.0.53",
)

alias(
    name = "quote",
    actual = ":quote-1.0.26",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "quote-1.0.26.crate",
    sha256 = "4424af4bf778aae2051a77b60283332f386554255d722233d09fbfc7e30da2fc",
    strip_prefix = "quote-1.0.26",
    urls = ["https://crates.io/api/v1/crates/quote/1.0.26/download"],
    visibility = [],
)

cargo.rust_library(
    name = "quote-1.0.26",
    srcs = [":quote-1.0.26.crate"],
    crate = "quote",
    crate_root = "quote-1.0.26.crate/src/lib.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :quote-1.0.26-build-script-run[rustc_flags])",
    ],
    visibility = [],
    deps = [":proc-macro2-1.0.53"],
)

cargo.rust_binary(
    name = "quote-1.0.26-build-script-build",
    srcs = [":quote-1.0.26.crate"],
    crate = "build_script_build",
    crate_root = "quote-1.0.26.crate/build.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

buildscript_run(
    name = "quote-1.0.26-build-script-run",
    package_name = "quote",
    buildscript_rule = ":quote-1.0.26-build-script-build",
    features = [
        "default",
        "proc-macro",
    ],
    version = "1.0.26",
)

alias(
    name = "ring",
    actual = ":ring-0.16.20",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "ring-0.16.20.crate",
    sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc",
    strip_prefix = "ring-0.16.20",
    sub_targets = [
        "crypto/constant_time_test.c",
        "crypto/cpu-intel.c",
        "crypto/crypto.c",
        "crypto/curve25519/curve25519.c",
        "crypto/curve25519/curve25519_tables.h",
        "crypto/curve25519/internal.h",
        "crypto/fipsmodule/aes/aes_nohw.c",
        "crypto/fipsmodule/bn/internal.h",
        "crypto/fipsmodule/bn/montgomery.c",
        "crypto/fipsmodule/bn/montgomery_inv.c",
        "crypto/fipsmodule/ec/ecp_nistz.c",
        "crypto/fipsmodule/ec/ecp_nistz.h",
        "crypto/fipsmodule/ec/ecp_nistz256.c",
        "crypto/fipsmodule/ec/ecp_nistz256.h",
        "crypto/fipsmodule/ec/ecp_nistz256_table.inl",
        "crypto/fipsmodule/ec/ecp_nistz384.h",
        "crypto/fipsmodule/ec/ecp_nistz384.inl",
        "crypto/fipsmodule/ec/gfp_p256.c",
        "crypto/fipsmodule/ec/gfp_p384.c",
        "crypto/internal.h",
        "crypto/limbs/limbs.c",
        "crypto/limbs/limbs.h",
        "crypto/limbs/limbs.inl",
        "crypto/mem.c",
        "crypto/poly1305/internal.h",
        "crypto/poly1305/poly1305.c",
        "crypto/poly1305/poly1305_arm.c",
        "crypto/poly1305/poly1305_vec.c",
        "include/GFp/aes.h",
        "include/GFp/arm_arch.h",
        "include/GFp/base.h",
        "include/GFp/check.h",
        "include/GFp/cpu.h",
        "include/GFp/mem.h",
        "include/GFp/poly1305.h",
        "include/GFp/type_check.h",
        "pregenerated/aesni-gcm-x86_64-elf.S",
        "pregenerated/aesni-gcm-x86_64-macosx.S",
        "pregenerated/aesni-gcm-x86_64-nasm.obj",
        "pregenerated/aesni-x86_64-elf.S",
        "pregenerated/aesni-x86_64-macosx.S",
        "pregenerated/aesni-x86_64-nasm.obj",
        "pregenerated/aesv8-armx-ios64.S",
        "pregenerated/aesv8-armx-linux64.S",
        "pregenerated/armv8-mont-ios64.S",
        "pregenerated/armv8-mont-linux64.S",
        "pregenerated/chacha-armv8-ios64.S",
        "pregenerated/chacha-armv8-linux64.S",
        "pregenerated/chacha-x86_64-elf.S",
        "pregenerated/chacha-x86_64-macosx.S",
        "pregenerated/chacha-x86_64-nasm.obj",
        "pregenerated/chacha20_poly1305_x86_64-elf.S",
        "pregenerated/chacha20_poly1305_x86_64-macosx.S",
        "pregenerated/chacha20_poly1305_x86_64-nasm.obj",
        "pregenerated/ecp_nistz256-armv8-ios64.S",
        "pregenerated/ecp_nistz256-armv8-linux64.S",
        "pregenerated/ghash-neon-armv8-ios64.S",
        "pregenerated/ghash-neon-armv8-linux64.S",
        "pregenerated/ghash-x86_64-elf.S",
        "pregenerated/ghash-x86_64-macosx.S",
        "pregenerated/ghash-x86_64-nasm.obj",
        "pregenerated/ghashv8-armx-ios64.S",
        "pregenerated/ghashv8-armx-linux64.S",
        "pregenerated/p256-x86_64-asm-elf.S",
        "pregenerated/p256-x86_64-asm-macosx.S",
        "pregenerated/p256-x86_64-asm-nasm.obj",
        "pregenerated/sha256-armv8-ios64.S",
        "pregenerated/sha256-armv8-linux64.S",
        "pregenerated/sha256-x86_64-elf.S",
        "pregenerated/sha256-x86_64-macosx.S",
        "pregenerated/sha256-x86_64-nasm.obj",
        "pregenerated/sha512-armv8-ios64.S",
        "pregenerated/sha512-armv8-linux64.S",
        "pregenerated/sha512-x86_64-elf.S",
        "pregenerated/sha512-x86_64-macosx.S",
        "pregenerated/sha512-x86_64-nasm.obj",
        "pregenerated/vpaes-armv8-ios64.S",
        "pregenerated/vpaes-armv8-linux64.S",
        "pregenerated/vpaes-x86_64-elf.S",
        "pregenerated/vpaes-x86_64-macosx.S",
        "pregenerated/vpaes-x86_64-nasm.obj",
        "pregenerated/x86_64-mont-elf.S",
        "pregenerated/x86_64-mont-macosx.S",
        "pregenerated/x86_64-mont-nasm.obj",
        "pregenerated/x86_64-mont5-elf.S",
        "pregenerated/x86_64-mont5-macosx.S",
        "pregenerated/x86_64-mont5-nasm.obj",
        "third_party/fiat/curve25519_32.h",
        "third_party/fiat/curve25519_64.h",
    ],
    urls = ["https://crates.io/api/v1/crates/ring/0.16.20/download"],
    visibility = [],
)

cargo.rust_library(
    name = "ring-0.16.20",
    srcs = [":ring-0.16.20.crate"],
    crate = "ring",
    crate_root = "ring-0.16.20.crate/src/lib.rs",
    edition = "2018",
    features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "once_cell",
    ],
    platform = {
        "linux-arm64": dict(
            deps = [
                ":libc-0.2.142",
                ":once_cell-1.17.1",
                ":ring-0.16.20-ring-c-asm-elf-aarch64",
                ":spin-0.5.2",
            ],
        ),
        "linux-x86_64": dict(
            deps = [
                ":libc-0.2.142",
                ":once_cell-1.17.1",
                ":ring-0.16.20-ring-c-asm-elf-x86_64",
                ":spin-0.5.2",
            ],
        ),
        "macos-arm64": dict(
            deps = [":ring-0.16.20-ring-c-asm-macos-arm64"],
        ),
        "macos-x86_64": dict(
            deps = [
                ":ring-0.16.20-ring-c-asm-macos-x86_64",
                ":spin-0.5.2",
            ],
        ),
        "windows-gnu": dict(
            deps = [
                ":ring-0.16.20-ring-asm-windows-x86_84-aesni-gcm-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-aesni-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-chacha-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-chacha20_poly1305_x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-ghash-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-p256-x86_64-asm-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-sha256-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-sha512-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-vpaes-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont5-nasm.obj",
                ":ring-0.16.20-ring-c-win-x86_84",
                ":spin-0.5.2",
                ":winapi-0.3.9",
            ],
        ),
        "windows-msvc": dict(
            deps = [
                ":ring-0.16.20-ring-asm-windows-x86_84-aesni-gcm-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-aesni-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-chacha-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-chacha20_poly1305_x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-ghash-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-p256-x86_64-asm-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-sha256-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-sha512-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-vpaes-x86_64-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont-nasm.obj",
                ":ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont5-nasm.obj",
                ":ring-0.16.20-ring-c-win-x86_84",
                ":spin-0.5.2",
                ":winapi-0.3.9",
            ],
        ),
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [":untrusted-0.7.1"],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-aesni-gcm-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/aesni-gcm-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-aesni-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/aesni-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-chacha-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/chacha-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-chacha20_poly1305_x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/chacha20_poly1305_x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-ghash-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/ghash-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-p256-x86_64-asm-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/p256-x86_64-asm-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-sha256-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/sha256-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-sha512-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/sha512-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-vpaes-x86_64-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/vpaes-x86_64-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/x86_64-mont-nasm.obj]",
    visibility = [],
)

prebuilt_cxx_library(
    name = "ring-0.16.20-ring-asm-windows-x86_84-x86_64-mont5-nasm.obj",
    static_lib = ":ring-0.16.20.crate[pregenerated/x86_64-mont5-nasm.obj]",
    visibility = [],
)

cxx_library(
    name = "ring-0.16.20-ring-c-asm-elf-aarch64",
    srcs = [
        ":ring-0.16.20.crate[crypto/constant_time_test.c]",
        ":ring-0.16.20.crate[crypto/crypto.c]",
        ":ring-0.16.20.crate[crypto/curve25519/curve25519.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/aes/aes_nohw.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery_inv.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p384.c]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.c]",
        ":ring-0.16.20.crate[crypto/mem.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_arm.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_vec.c]",
        ":ring-0.16.20.crate[pregenerated/aesv8-armx-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/armv8-mont-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/chacha-armv8-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/ecp_nistz256-armv8-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/ghash-neon-armv8-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/ghashv8-armx-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/sha256-armv8-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/sha512-armv8-linux64.S]",
        ":ring-0.16.20.crate[pregenerated/vpaes-armv8-linux64.S]",
    ],
    headers = [
        ":ring-0.16.20.crate[crypto/curve25519/curve25519_tables.h]",
        ":ring-0.16.20.crate[crypto/curve25519/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256_table.inl]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.inl]",
        ":ring-0.16.20.crate[crypto/internal.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.inl]",
        ":ring-0.16.20.crate[crypto/poly1305/internal.h]",
        ":ring-0.16.20.crate[include/GFp/aes.h]",
        ":ring-0.16.20.crate[include/GFp/arm_arch.h]",
        ":ring-0.16.20.crate[include/GFp/base.h]",
        ":ring-0.16.20.crate[include/GFp/check.h]",
        ":ring-0.16.20.crate[include/GFp/cpu.h]",
        ":ring-0.16.20.crate[include/GFp/mem.h]",
        ":ring-0.16.20.crate[include/GFp/poly1305.h]",
        ":ring-0.16.20.crate[include/GFp/type_check.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_32.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_64.h]",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["$(location :ring-0.16.20.crate)/include"],
    preferred_linkage = "static",
    visibility = [],
)

cxx_library(
    name = "ring-0.16.20-ring-c-asm-elf-x86_64",
    srcs = [
        ":ring-0.16.20.crate[crypto/constant_time_test.c]",
        ":ring-0.16.20.crate[crypto/cpu-intel.c]",
        ":ring-0.16.20.crate[crypto/crypto.c]",
        ":ring-0.16.20.crate[crypto/curve25519/curve25519.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/aes/aes_nohw.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery_inv.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p384.c]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.c]",
        ":ring-0.16.20.crate[crypto/mem.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_arm.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_vec.c]",
        ":ring-0.16.20.crate[pregenerated/aesni-gcm-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/aesni-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/chacha-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/chacha20_poly1305_x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/ghash-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/p256-x86_64-asm-elf.S]",
        ":ring-0.16.20.crate[pregenerated/sha256-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/sha512-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/vpaes-x86_64-elf.S]",
        ":ring-0.16.20.crate[pregenerated/x86_64-mont-elf.S]",
        ":ring-0.16.20.crate[pregenerated/x86_64-mont5-elf.S]",
    ],
    headers = [
        ":ring-0.16.20.crate[crypto/curve25519/curve25519_tables.h]",
        ":ring-0.16.20.crate[crypto/curve25519/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256_table.inl]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.inl]",
        ":ring-0.16.20.crate[crypto/internal.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.inl]",
        ":ring-0.16.20.crate[crypto/poly1305/internal.h]",
        ":ring-0.16.20.crate[include/GFp/aes.h]",
        ":ring-0.16.20.crate[include/GFp/arm_arch.h]",
        ":ring-0.16.20.crate[include/GFp/base.h]",
        ":ring-0.16.20.crate[include/GFp/check.h]",
        ":ring-0.16.20.crate[include/GFp/cpu.h]",
        ":ring-0.16.20.crate[include/GFp/mem.h]",
        ":ring-0.16.20.crate[include/GFp/poly1305.h]",
        ":ring-0.16.20.crate[include/GFp/type_check.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_32.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_64.h]",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["$(location :ring-0.16.20.crate)/include"],
    preferred_linkage = "static",
    visibility = [],
)

cxx_library(
    name = "ring-0.16.20-ring-c-asm-macos-arm64",
    srcs = [
        ":ring-0.16.20.crate[crypto/constant_time_test.c]",
        ":ring-0.16.20.crate[crypto/crypto.c]",
        ":ring-0.16.20.crate[crypto/curve25519/curve25519.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/aes/aes_nohw.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery_inv.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p384.c]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.c]",
        ":ring-0.16.20.crate[crypto/mem.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_arm.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_vec.c]",
        ":ring-0.16.20.crate[pregenerated/aesv8-armx-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/armv8-mont-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/chacha-armv8-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/ecp_nistz256-armv8-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/ghash-neon-armv8-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/ghashv8-armx-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/sha256-armv8-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/sha512-armv8-ios64.S]",
        ":ring-0.16.20.crate[pregenerated/vpaes-armv8-ios64.S]",
    ],
    headers = [
        ":ring-0.16.20.crate[crypto/curve25519/curve25519_tables.h]",
        ":ring-0.16.20.crate[crypto/curve25519/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256_table.inl]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.inl]",
        ":ring-0.16.20.crate[crypto/internal.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.inl]",
        ":ring-0.16.20.crate[crypto/poly1305/internal.h]",
        ":ring-0.16.20.crate[include/GFp/aes.h]",
        ":ring-0.16.20.crate[include/GFp/arm_arch.h]",
        ":ring-0.16.20.crate[include/GFp/base.h]",
        ":ring-0.16.20.crate[include/GFp/check.h]",
        ":ring-0.16.20.crate[include/GFp/cpu.h]",
        ":ring-0.16.20.crate[include/GFp/mem.h]",
        ":ring-0.16.20.crate[include/GFp/poly1305.h]",
        ":ring-0.16.20.crate[include/GFp/type_check.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_32.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_64.h]",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["$(location :ring-0.16.20.crate)/include"],
    preferred_linkage = "static",
    visibility = [],
)

cxx_library(
    name = "ring-0.16.20-ring-c-asm-macos-x86_64",
    srcs = [
        ":ring-0.16.20.crate[crypto/constant_time_test.c]",
        ":ring-0.16.20.crate[crypto/cpu-intel.c]",
        ":ring-0.16.20.crate[crypto/crypto.c]",
        ":ring-0.16.20.crate[crypto/curve25519/curve25519.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/aes/aes_nohw.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery_inv.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p384.c]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.c]",
        ":ring-0.16.20.crate[crypto/mem.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_arm.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_vec.c]",
        ":ring-0.16.20.crate[pregenerated/aesni-gcm-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/aesni-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/chacha-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/chacha20_poly1305_x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/ghash-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/p256-x86_64-asm-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/sha256-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/sha512-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/vpaes-x86_64-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/x86_64-mont-macosx.S]",
        ":ring-0.16.20.crate[pregenerated/x86_64-mont5-macosx.S]",
    ],
    headers = [
        ":ring-0.16.20.crate[crypto/curve25519/curve25519_tables.h]",
        ":ring-0.16.20.crate[crypto/curve25519/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256_table.inl]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.inl]",
        ":ring-0.16.20.crate[crypto/internal.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.inl]",
        ":ring-0.16.20.crate[crypto/poly1305/internal.h]",
        ":ring-0.16.20.crate[include/GFp/aes.h]",
        ":ring-0.16.20.crate[include/GFp/arm_arch.h]",
        ":ring-0.16.20.crate[include/GFp/base.h]",
        ":ring-0.16.20.crate[include/GFp/check.h]",
        ":ring-0.16.20.crate[include/GFp/cpu.h]",
        ":ring-0.16.20.crate[include/GFp/mem.h]",
        ":ring-0.16.20.crate[include/GFp/poly1305.h]",
        ":ring-0.16.20.crate[include/GFp/type_check.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_32.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_64.h]",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["$(location :ring-0.16.20.crate)/include"],
    preferred_linkage = "static",
    visibility = [],
)

cxx_library(
    name = "ring-0.16.20-ring-c-win-x86_84",
    srcs = [
        ":ring-0.16.20.crate[crypto/constant_time_test.c]",
        ":ring-0.16.20.crate[crypto/cpu-intel.c]",
        ":ring-0.16.20.crate[crypto/crypto.c]",
        ":ring-0.16.20.crate[crypto/curve25519/curve25519.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/aes/aes_nohw.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/montgomery_inv.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p256.c]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/gfp_p384.c]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.c]",
        ":ring-0.16.20.crate[crypto/mem.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_arm.c]",
        ":ring-0.16.20.crate[crypto/poly1305/poly1305_vec.c]",
    ],
    headers = [
        ":ring-0.16.20.crate[crypto/curve25519/curve25519_tables.h]",
        ":ring-0.16.20.crate[crypto/curve25519/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/bn/internal.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz256_table.inl]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.h]",
        ":ring-0.16.20.crate[crypto/fipsmodule/ec/ecp_nistz384.inl]",
        ":ring-0.16.20.crate[crypto/internal.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.h]",
        ":ring-0.16.20.crate[crypto/limbs/limbs.inl]",
        ":ring-0.16.20.crate[crypto/poly1305/internal.h]",
        ":ring-0.16.20.crate[include/GFp/aes.h]",
        ":ring-0.16.20.crate[include/GFp/arm_arch.h]",
        ":ring-0.16.20.crate[include/GFp/base.h]",
        ":ring-0.16.20.crate[include/GFp/check.h]",
        ":ring-0.16.20.crate[include/GFp/cpu.h]",
        ":ring-0.16.20.crate[include/GFp/mem.h]",
        ":ring-0.16.20.crate[include/GFp/poly1305.h]",
        ":ring-0.16.20.crate[include/GFp/type_check.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_32.h]",
        ":ring-0.16.20.crate[third_party/fiat/curve25519_64.h]",
    ],
    compiler_flags = ["-Wno-error"],
    include_directories = ["$(location :ring-0.16.20.crate)/include"],
    preferred_linkage = "static",
    visibility = [],
)

alias(
    name = "scratch",
    actual = ":scratch-1.0.5",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "scratch-1.0.5.crate",
    sha256 = "1792db035ce95be60c3f8853017b3999209281c24e2ba5bc8e59bf97a0c590c1",
    strip_prefix = "scratch-1.0.5",
    urls = ["https://crates.io/api/v1/crates/scratch/1.0.5/download"],
    visibility = [],
)

cargo.rust_library(
    name = "scratch-1.0.5",
    srcs = [":scratch-1.0.5.crate"],
    crate = "scratch",
    crate_root = "scratch-1.0.5.crate/src/lib.rs",
    edition = "2015",
    env = {
        "OUT_DIR": "$(location :scratch-1.0.5-build-script-run[out_dir])",
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

cargo.rust_binary(
    name = "scratch-1.0.5-build-script-build",
    srcs = [":scratch-1.0.5.crate"],
    crate = "build_script_build",
    crate_root = "scratch-1.0.5.crate/build.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

buildscript_run(
    name = "scratch-1.0.5-build-script-run",
    package_name = "scratch",
    buildscript_rule = ":scratch-1.0.5-build-script-build",
    version = "1.0.5",
)

http_archive(
    name = "spin-0.5.2.crate",
    sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d",
    strip_prefix = "spin-0.5.2",
    urls = ["https://crates.io/api/v1/crates/spin/0.5.2/download"],
    visibility = [],
)

cargo.rust_library(
    name = "spin-0.5.2",
    srcs = [":spin-0.5.2.crate"],
    crate = "spin",
    crate_root = "spin-0.5.2.crate/src/lib.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

alias(
    name = "syn",
    actual = ":syn-2.0.10",
    visibility = ["PUBLIC"],
)

http_archive(
    name = "syn-2.0.10.crate",
    sha256 = "5aad1363ed6d37b84299588d62d3a7d95b5a5c2d9aad5c85609fda12afaa1f40",
    strip_prefix = "syn-2.0.10",
    urls = ["https://crates.io/api/v1/crates/syn/2.0.10/download"],
    visibility = [],
)

cargo.rust_library(
    name = "syn-2.0.10",
    srcs = [":syn-2.0.10.crate"],
    crate = "syn",
    crate_root = "syn-2.0.10.crate/src/lib.rs",
    edition = "2021",
    features = [
        "clone-impls",
        "default",
        "derive",
        "full",
        "parsing",
        "printing",
        "proc-macro",
        "quote",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
    deps = [
        ":proc-macro2-1.0.53",
        ":quote-1.0.26",
        ":unicode-ident-1.0.8",
    ],
)

http_archive(
    name = "termcolor-1.2.0.crate",
    sha256 = "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6",
    strip_prefix = "termcolor-1.2.0",
    urls = ["https://crates.io/api/v1/crates/termcolor/1.2.0/download"],
    visibility = [],
)

cargo.rust_library(
    name = "termcolor-1.2.0",
    srcs = [":termcolor-1.2.0.crate"],
    crate = "termcolor",
    crate_root = "termcolor-1.2.0.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "windows-gnu": dict(
            deps = [":winapi-util-0.1.5"],
        ),
        "windows-msvc": dict(
            deps = [":winapi-util-0.1.5"],
        ),
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

http_archive(
    name = "unicode-ident-1.0.8.crate",
    sha256 = "e5464a87b239f13a63a501f2701565754bae92d243d4bb7eb12f6d57d2269bf4",
    strip_prefix = "unicode-ident-1.0.8",
    urls = ["https://crates.io/api/v1/crates/unicode-ident/1.0.8/download"],
    visibility = [],
)

cargo.rust_library(
    name = "unicode-ident-1.0.8",
    srcs = [":unicode-ident-1.0.8.crate"],
    crate = "unicode_ident",
    crate_root = "unicode-ident-1.0.8.crate/src/lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

http_archive(
    name = "unicode-width-0.1.10.crate",
    sha256 = "c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b",
    strip_prefix = "unicode-width-0.1.10",
    urls = ["https://crates.io/api/v1/crates/unicode-width/0.1.10/download"],
    visibility = [],
)

cargo.rust_library(
    name = "unicode-width-0.1.10",
    srcs = [":unicode-width-0.1.10.crate"],
    crate = "unicode_width",
    crate_root = "unicode-width-0.1.10.crate/src/lib.rs",
    edition = "2015",
    features = ["default"],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

http_archive(
    name = "untrusted-0.7.1.crate",
    sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a",
    strip_prefix = "untrusted-0.7.1",
    urls = ["https://crates.io/api/v1/crates/untrusted/0.7.1/download"],
    visibility = [],
)

cargo.rust_library(
    name = "untrusted-0.7.1",
    srcs = [":untrusted-0.7.1.crate"],
    crate = "untrusted",
    crate_root = "untrusted-0.7.1.crate/src/untrusted.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

http_archive(
    name = "winapi-0.3.9.crate",
    sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
    strip_prefix = "winapi-0.3.9",
    urls = ["https://crates.io/api/v1/crates/winapi/0.3.9/download"],
    visibility = [],
)

cargo.rust_library(
    name = "winapi-0.3.9",
    srcs = [":winapi-0.3.9.crate"],
    crate = "winapi",
    crate_root = "winapi-0.3.9.crate/src/lib.rs",
    edition = "2015",
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "minwindef",
        "ntsecapi",
        "processenv",
        "std",
        "winbase",
        "wincon",
        "winerror",
        "winnt",
        "wtypesbase",
    ],
    rustc_flags = [
        "--cap-lints=allow",
        "@$(location :winapi-0.3.9-build-script-run[rustc_flags])",
    ],
    visibility = [],
)

cargo.rust_binary(
    name = "winapi-0.3.9-build-script-build",
    srcs = [":winapi-0.3.9.crate"],
    crate = "build_script_build",
    crate_root = "winapi-0.3.9.crate/build.rs",
    edition = "2015",
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "minwindef",
        "ntsecapi",
        "processenv",
        "std",
        "winbase",
        "wincon",
        "winerror",
        "winnt",
        "wtypesbase",
    ],
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)

buildscript_run(
    name = "winapi-0.3.9-build-script-run",
    package_name = "winapi",
    buildscript_rule = ":winapi-0.3.9-build-script-build",
    features = [
        "consoleapi",
        "errhandlingapi",
        "fileapi",
        "minwindef",
        "ntsecapi",
        "processenv",
        "std",
        "winbase",
        "wincon",
        "winerror",
        "winnt",
        "wtypesbase",
    ],
    version = "0.3.9",
)

http_archive(
    name = "winapi-util-0.1.5.crate",
    sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
    strip_prefix = "winapi-util-0.1.5",
    urls = ["https://crates.io/api/v1/crates/winapi-util/0.1.5/download"],
    visibility = [],
)

cargo.rust_library(
    name = "winapi-util-0.1.5",
    srcs = [":winapi-util-0.1.5.crate"],
    crate = "winapi_util",
    crate_root = "winapi-util-0.1.5.crate/src/lib.rs",
    edition = "2018",
    platform = {
        "windows-gnu": dict(
            deps = [":winapi-0.3.9"],
        ),
        "windows-msvc": dict(
            deps = [":winapi-0.3.9"],
        ),
    },
    rustc_flags = ["--cap-lints=allow"],
    visibility = [],
)
